- if can?(:merge, resource) || can?(:destroy, resource)
  .dangerous-actions
    = spoiler t('.dangerous_actions') + ' (супер модератор)' do
      .to-process data-dynamic='tabs'
        .block
          div class=(resource.anime? || resource.kinda_manga? ? 'fc-actions' : 'fc-2')
            - if can? :merge, resource
              .f-column
                .b-link_button.light-red[
                  data-tab-switch
                ] = t('.merge_as_duplicate')
              - if resource.anime? || resource.kinda_manga?
                .f-column
                  .b-link_button.light-red[
                    data-tab-switch
                  ]
                    = t('.merge_as_episode')

                .f-column
                  .b-link_button.light-red[
                    data-tab-switch
                  ]
                    = t('.merge_episodes')
            - if can? :destroy, resource
              .f-column
                .b-link_button.light-red[
                  data-tab-switch
                ]
                  = t('.deletion')

        .block_m
          - if can? :merge, resource
            .hidden[
              data-tab
            ]
              = form_tag resource.merge_into_other_url, method: :delete do |f|
                = render 'db_entries/dangerous_actions/warning_headline',
                  is_merge: true,
                  resource: resource,
                  headline: "#{t '.merge_as_duplicate'} (#{t(".into_another.#{resource.object.class.name.downcase}")})" do
                .b-input.merge_target_id[
                  data-type=resource.object.class.name
                ]
                  input type='hidden' name='target_id'
                  label С чем сливать
                  input[
                    type='text'
                    placeholder=t(:"#{resource.object.class.name.downcase}_#{resource.object.class.in?([Character, Person]) ? 'name' : 'title'}")
                    data-autocomplete=(resource.ranobe? ? autocomplete_ranobe_index_url : send(:"autocomplete_#{resource.object.class.name.downcase.pluralize}_url"))
                  ]

                = render 'db_entries/dangerous_actions/warning_mal_presence', resource: resource
                input.b-button[
                  type='submit'
                  disabled
                  value=t('.send_for_merging')
                ]

            - if resource.anime? || resource.kinda_manga?
              .hidden[
                data-tab
              ]
                = form_tag resource.merge_as_episode_url, method: :delete do |f|
                  = render 'db_entries/dangerous_actions/warning_headline',
                    is_merge: true,
                    resource: resource,
                    headline: "#{t '.merge_as_episode'} (#{t ".into_another.#{resource.object.class.name.downcase}"})" do
                  .b-input.merge_target_id[
                    data-type=resource.object.class.name
                  ]
                    input type='hidden' name='target_id'
                    label С чем сливать
                    input[
                      type='text'
                      placeholder=t(:"#{resource.object.class.name.downcase}_#{resource.object.class.in?([Character, Person]) ? 'name' : 'title'}")
                      data-autocomplete=(resource.ranobe? ? autocomplete_ranobe_index_url : send(:"autocomplete_#{resource.object.class.name.downcase.pluralize}_url"))
                    ]
                  .d-flex
                    input type='hidden' name='episode_field' value='episodes'
                    .b-input.mr-5
                      label Номер эпизода
                      input[
                        type='number'
                        name='as_episode'
                        min='0'
                      ]
                    .b-input
                      label Название эпизода (для комментария)
                      input[
                        type='text'
                        name='episode_label'
                      ]
                      .hint Не обязательно
                  - if resource.kinda_manga?
                    .b-input
                      label Тип эпизода
                      select name='episode_field'
                        option[
                          selected
                          value='chapters'
                        ] Глава
                        option[
                          value='volumes'
                        ] Том
                  - else
                    input type='hidden' name='episode_type' value='episodes'
                  = render 'db_entries/dangerous_actions/warning_mal_presence', resource: resource
                  input.b-button[
                    type='submit'
                    disabled
                    value=t('.send_for_merging')
                  ]

              .hidden[
                data-tab
              ]
                = render 'db_entries/dangerous_actions/warning_headline',
                  is_merge: true,
                  resource: resource,
                  headline: "#{t '.merge_episodes'} (#{t '.into_here'})" do
                h1.mb-5 Not implemented yet
                = render 'db_entries/dangerous_actions/warning_mal_presence', resource: resource

          - if can? :destroy, resource
            .hidden[
              data-tab
            ]
              = render 'db_entries/dangerous_actions/warning_headline',
                headline: t('.deletion') do
                p.warning После нажатия кнопки в очередь задач сайта будет добавлена задача,
                  удаляющая #{i18n_i resource.object.class.name.downcase, 1, :accusative}.
                p.warning Удаление начнётся через 30 минут и может занять от 5 минут
                  до пары часов в зависимости
                  от популярности #{resource.object.class == Manga ? 'этой' : 'этого'}
                  #{i18n_i resource.object.class.name.downcase, 1, :genitive} на сайте.

              = render 'db_entries/dangerous_actions/warning_mal_presence', resource: resource
              a.b-button[
                href=resource.url
                data-method='delete'
                data-confirm=t('actions.confirm')
              ] = t '.send_for_removal'
